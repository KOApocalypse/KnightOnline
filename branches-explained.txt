Hey there,
So it might be a bit confusing in the first look on the branches, but i will make a
short explanation here and feel free to ask anything if you got questions about this setup.
---------------------------------------------------------------------------------------------------
Branches-Explained:
* master - that's the default branch, normally you'll develop on the develop branch and not
on the master branch, so the branch will always be there by default. there is a reason for
it which i'm not sure why, but it's like that in every project.

* develop - normally we'll develop on this branch unless there are some implentation you are not
sure about, so iv'e made you a branch called sm-dev. So the develop is like the stable version in 
developing process of this project.

features branches:
* comments-translating - One of the things that really helps understanding the code is reading the
comments, so i'll try once in a while swapping my OS into Chinese so i can read these weird letters
in Chinese and translate to English.

* gr-dev - this made for me if i want to run some testing that i think they might be useful
for us to merge to the develop branch later on without effecting the project. 

* sm-dev - this is your branch in case you want to push stuffs into the project that might be useful
to the main project later(develop branch) on. to avoid confusing. 

release branches:
* release-1.0.0 - we will try once in a while to make a stable version of the project and merge
it into the release branch. i believe we'll use it every half a year, depends how further we'll go 
with this project.

---------------------------------------------------------------------------------------------------
I know it seems really confusing, but i believe you'll get the hang of it and thanks me later once
you see how powerful SourceTree is when working with more people.
The way this works, you can always merge the last changes into your sm-dev branch from develop
branch, that way you are not effecting the develop branch when you are not sure about some stuffs.
You can also run them local with pushing of course, but those features branches might be useful
when you want to keep changes that you are not sure about keeping them that might be useful for
the develop branch later. It will also be nice to keep it because it's like you documentating the
stuffs you were testing so we can learn from each other.